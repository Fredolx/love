name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        node-version: [20.x]
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies (ubuntu only)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev
    
    - name: Rust setup
      uses: dtolnay/rust-toolchain@stable
      
    - name: install deps
      run: |
        npm install

    - name: build
      run: |
        npm run build
        npm run tauri build

    - uses: actions/upload-artifact@v4.3.1
      if: matrix.os == 'macos-latest'
      with:
        name: love-macos-amd64
        path: src-tauri/target/release/bundle/dmg/*.dmg
        retention-days: 7

    - uses: actions/upload-artifact@v4.3.1
      if: matrix.os == 'windows-latest'
      with:
        name: love-windows-amd64
        path: src-tauri/target/release/bundle/msi/*.msi
        retention-days: 7

    - uses: actions/upload-artifact@v4.3.1
      if: matrix.os == 'ubuntu-latest'
      with:
        name: love-linux-deb-amd64
        path: src-tauri/target/release/bundle/deb/*.deb
        retention-days: 7

    - uses: actions/upload-artifact@v4.3.1
      if: matrix.os == 'ubuntu-latest'
      with:
        name: love-linux-appImage-amd64
        path: src-tauri/target/release/bundle/appimage/*.AppImage
        retention-days: 7
    

    
    
        
      
